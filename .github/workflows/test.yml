name: Test Matrix

on:
  pull_request:
  push:
    branches:
    - master

defaults:
  run:
    shell: bash

jobs:

  Linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image:
          # 5.2 Stable
          - swift:5.2-xenial
          - swift:5.2-bionic
          # 5.2 Unstable
          - swiftlang/swift:nightly-5.2-xenial
          - swiftlang/swift:nightly-5.2-bionic
          # 5.3 Unstable
          - swiftlang/swift:nightly-5.3-xenial
          - swiftlang/swift:nightly-5.3-bionic
          # Master Unsable
          - swiftlang/swift:nightly-master-xenial
          - swiftlang/swift:nightly-master-bionic
          - swiftlang/swift:nightly-master-focal
          - swiftlang/swift:nightly-master-centos8
          - swiftlang/swift:nightly-master-amazonlinux2
        include:
          - depscmd: 'apt-get -q update && apt-get -q install -y libsqlite3-dev'
          - image: swiftlang/swift:nightly-master-centos8
            depscmd: 'dnf install -y sqlite-devel'
          - image: swiftlang/swift:nightly-master-amazonlinux2
            depscmd: 'yum install -y sqlite-devel'
    container: ${{ matrix.image }}
    steps:
      - name: Install dependencies
        run: ${{ matrix.depscmd }}
      - name: Update AmazonLinux2's too-old SQLite and compensate for its Postgres
        if: ${{ endsWith(matrix.image, 'amazonlinux2') }}
        working-directory: /root
        # Cribbed from the Fedora RPM, leaves out a lot. System's Tcl is too old to run SQLite's tests.
        run: |
          yum install -y file tcl-devel make
          curl -L 'https://www.sqlite.org/src/tarball/sqlite.tar.gz?r=release' | tar xz && cd sqlite
          export CFLAGS="-DSQLITE_DISABLE_DIRSYNC=1 -DSQLITE_SECURE_DELETE=1"
          ./configure --prefix=/usr --libdir=/usr/lib64 --enable-fts3 --enable-all --with-tcl=/usr/lib64
          make all install
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run tests with Thread Sanitizer
        run: swift test --enable-test-discovery --sanitize=thread

  macOS:
    runs-on: macos-latest
    steps:
      - name: Select latest available Xcode
        uses: maxim-lobanov/setup-xcode@1.0
        with: { 'xcode-version': 'latest' }
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run tests with Thread Sanitizer
        run: swift test --enable-test-discovery --sanitize=thread
